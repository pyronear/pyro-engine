name: builds

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python: ['3.9']
    
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
          architecture: x64

      - name: Cache python modules
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-python-${{ matrix.python }}-${{ hashFiles('pyproject.toml') }}-build

      - name: Generate version.py (optional, if syncing from pyproject.toml)
        run: |
          python scripts/generate_version.py

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          poetry install

      - name: Install package in editable mode
        run: poetry install --with dev

      - name: Import package and print version
        run: poetry run python -c "import pyroengine; print(pyroengine.__version__)"
  
 