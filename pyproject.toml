[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[tool.poetry]
name = "pyroengine"
version = "3.0.0"
description = "Wildfire detection on edge devices"
authors = ["Pyronear <contact@pyronear.org>"]
readme = "README.md"
license = "Apache-2.0"
keywords = ["pytorch", "deep learning", "vision", "cnn", "wildfire"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Artificial Intelligence"
]

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
requests = "==2.31.0"
tqdm = "==4.67.1"
aiohttp = "==3.11.18"
onnxruntime = "==1.18.1"
huggingface_hub = "==0.23.1"
pillow = "==11.0.0"
ncnn = "==1.0.20240410"
pyroclient = { git = "https://github.com/pyronear/pyro-api.git", branch = "main", subdirectory = "client" }
python-dotenv = "==1.1.0"


[tool.poetry.group.quality.dependencies]
ruff = "^0.11.9"
black = "^24.3.0"
isort = "^5.13.2"
mypy = "^1.9.0"
pydocstyle = "^6.3.0"


[tool.poetry.group.dev.dependencies]
pytest = "^7.0"
pytest-asyncio = "^0.23.0"
coverage = "^7.4.0"
requests = "^2.31.0"
flake8 = "^7.0.0"
isort = "^5.13.2"
mypy = "^1.9.0"
pydocstyle = "^6.3.0"
black = "^24.3.0"
onnx = "^1.15.0"

[tool.poetry.group.docs.dependencies]
sphinx = "^7.2.6"
furo = "^2024.1.29"
sphinxemoji = "^0.2.0"
sphinx-copybutton = "^0.5.2"
Jinja2 = "^3.1.3"

[tool.poetry.urls]
documentation = "https://pyronear.org/pyro-engine"
repository = "https://github.com/pyronear/pyro-engine"
tracker = "https://github.com/pyronear/pyro-engine/issues"

[tool.coverage.run]
source = ["pyroengine"]

[tool.mypy]
python_version = "3.11"
files = "pyroengine/,reolink_api/"
show_error_codes = true
pretty = true
warn_unused_ignores = true
warn_redundant_casts = true
no_implicit_optional = true
check_untyped_defs = true
implicit_reexport = false
allow_untyped_imports = true

[[tool.mypy.overrides]]
module = "pyroengine.version"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pyroengine.__init__"
ignore_errors = true

[[tool.mypy.overrides]]
module = [
    "onnxruntime.*",
    "requests.*",
    "PIL.*",
    "pyroclient.*",
    "urllib3.*",
    "setuptools",
    "yaml",
    "ncnn",
]
ignore_missing_imports = true


[tool.ruff]
line-length = 120
target-version = "py39"
preview = true

[tool.ruff.lint]
select = [
    "F", "E", "W", "I", "N",
    "D201", "D202", "D207", "D208", "D214", "D215", "D300", "D301", "D417", "D419",
    "YTT", "ANN", "ASYNC", "S", "BLE", "B", "A", "COM", "CPY", "C4", "T10", "ISC", "ICN", "LOG",
    "PIE", "T20", "PYI", "PT", "Q", "RSE", "RET", "SIM", "ARG", "PTH", "PERF", "NPY", "FURB", "RUF"
]
ignore = [
    "E501", "B008", "B904", "C901", "F403", "E731", "C416",
    "ANN002", "ANN003", "COM812", "ISC001"
]
exclude = [".git"]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"

[tool.ruff.lint.isort]
known-first-party = ["pyroengine", "reolink_api"]
known-third-party = ["pillow", "tqdm", "onnxruntime", "huggingface_hub"]

[tool.ruff.lint.per-file-ignores]
"**/__init__.py" = ["I001", "F401", "CPY001"]
"src/**.py" = ["D", "T201", "S101", "ANN"]
".github/**.py" = ["D", "T201", "ANN"]
"tests/**.py" = ["D103", "CPY001", "S101", "T201", "ANN001", "ANN201", "ANN202", "ARG001"]
"reolink_api/**.py" = ["D", "T201", "S101", "ANN"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.isort]
line_length = 120
skip_glob = "**/__init__.py"

[tool.pydocstyle]
select = "D300,D301,D417"
match = ".*\\.py"

[tool.black]
line-length = 120
target-version = ['py39']
